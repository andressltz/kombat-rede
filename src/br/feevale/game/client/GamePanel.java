package br.feevale.game.client;


import javax.swing.*;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;

public class GamePanel extends javax.swing.JFrame implements Runnable {

    private static final int SPEED = 4;
    private static final int SERVER_PORT = 8181;
    private static final String SERVER_HOST = "localhost";

    public static Player player;
    private PrintWriter writer;
    private Socket socket;

    public static boolean keyRight = false;
    public static boolean keyLeft = false;
    public static boolean keyUp = false;
    public static boolean keyDown = false;
    public static String playerName = null;
    private boolean isKeyPressed = false;
    private boolean isKeyRealeased = false;
    private int keyPressed;

    public GamePanel() {
        initComponents();
    }

    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GamePanel g = new GamePanel();
                g.connect();
//                g.initComponents();
                g.setSize(800, 600);
                g.setVisible(true);
                Thread game = new Thread(g);
                game.start();
            }
        });
    }

    private void connect() {
        try {
            socket = new Socket(SERVER_HOST, SERVER_PORT);
            writer = new PrintWriter(socket.getOutputStream());

            CommunicateThread c = new CommunicateThread(socket);
            c.communicate();
            c.start();
        } catch (IOException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Erro ao conectar com o servidor: " + e.getLocalizedMessage());
            System.exit(1);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened();
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }

            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased();
            }
        });
        getContentPane().setLayout(null);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened() {
        player = new Player();
        player.setup();
        getContentPane().add(player);
        repaint();
    }

    private void formKeyPressed(java.awt.event.KeyEvent evt) {
        isKeyPressed = true;
        keyPressed = evt.getKeyCode();
    }

    private void formKeyReleased() {
        isKeyRealeased = true;
    }

    private void updateGame() {
        if (player != null && playerName != null && !playerName.equals(player.getPlayerName())) {
            player.setPlayerName(playerName);
        }
        if (keyRight) {
            player.x += SPEED;
            player.move();
        } else if (keyLeft) {
            player.x -= SPEED;
            player.move();
        } else if (keyUp) {
            player.y -= SPEED;
            player.move();
        } else if (keyDown) {
            player.y += SPEED;
            player.move();
        }
        if (isKeyPressed) {
            System.out.println("updateGame() - Apertei a tecla " + keyPressed);
            writer.println(keyPressed);
            writer.flush();
            isKeyPressed = false;
            isKeyRealeased = false;
        }
        if (isKeyRealeased) {
            System.out.println("updateGame() - Soltei a tecla " + keyPressed);
            writer.println("keyReleased");
            writer.flush();
            isKeyPressed = false;
            isKeyRealeased = false;
        }
    }

    @Override
    public void run() {
        try {
            while (true) {
                updateGame();
                Thread.sleep(20);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

}

